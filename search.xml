<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo+GitHub Pages+Redefine+Giscus建立个人站点</title>
    <url>/website/2024/08/30/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/</url>
    <content><![CDATA[<h1 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h1><p>搭建整个博客不需要任何额外的东西，比如域名，比如服务器之类的。但是需要你能访问到github。</p>
<p>熟练起来，搭建大约两个小时，初次搭建大约需要一天。</p>
<p>Hexo：一个博客框架，可以认为是一个帮助你快速建立博客的工具集。可以通过命令行的形式创建页面，启动服务，上传到github之类的。当然，除了Hexo，也有其它的博客框架。</p>
<p>Redefine：Hexo博客框架下的一个主题，Hexo可以管理多个主题。</p>
<p>GitHub Pages：github的静态网页部署方式，可以让你的html在网页上直接打开。</p>
<p>Giscus：博客需要评论，评论就需要评论系统，Giscus就是一个评论系统。 除此之外也有其它的评论系统，它们大概都是根据存储评论地方的不同而区分，比如有的是存在github的issue，有的是存在第三方存储平台，按需索取。</p>
<p>大概的流程是：</p>
<ol>
<li>你需要在Hexo的主题列表中选一个自己心仪的主题，然后在本地部署起来。（可以直接在本地访问网页）</li>
<li>然后在github创建一个仓库，打开pages</li>
<li>通过hexo将本地的博客系统部署到github仓库</li>
<li>配置Giscus评论系统</li>
</ol>
<h1 id="搭建博客-部署pages"><a href="#搭建博客-部署pages" class="headerlink" title="搭建博客 &amp; 部署pages"></a>搭建博客 &amp; 部署pages</h1><p><a class="link"   href="https://www.cnblogs.com/huanhao/p/hexobase.html" >【基础篇】hexo博客搭建教程 - huanhao - 博客园 (cnblogs.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>搭建博客可以参考上述这个链接，写的蛮详细的。</p>
<h1 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h1><p>我这个主题的评论系统支持四种：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830132235627.png"
                      alt="image-20240830132235627"
                ></p>
<p>我分别试了waline、gitalk、giscus三种，只有giscus可用。</p>
<p>waline在国内被墙，需要一个自定义域名，国内的域名需要备案，国外的申请也比较麻烦，过程很繁琐。</p>
<p>gitalk在国内没有被墙，但是它需要调一个github的auth api，这个api被墙了，所以也不能用。</p>
<p>只有giscus可以用。</p>
<p>如果你的主题支持giscus的话，打开配置文件，大概会有这些选项需要配置</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">giscus:</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">huyunfei-blog/blog-comment</span> <span class="comment"># Github repository name e.g. EvanNotFound/hexo-theme-redefine</span></span><br><span class="line">  <span class="attr">repo_id:</span>  <span class="comment"># Github repository id</span></span><br><span class="line">  <span class="attr">category:</span>  <span class="comment"># Github discussion category</span></span><br><span class="line">  <span class="attr">category_id:</span>  <span class="comment"># Github discussion category id</span></span><br><span class="line">  <span class="attr">mapping:</span>  <span class="comment"># Which value to use as the unique identifier for the page. e.g. pathname, url, title, og:title. DO NOT USE og:title WITH PJAX ENABLED since pjax will not update og:title when the page changes</span></span><br><span class="line">  <span class="attr">strict:</span> <span class="number">0</span> <span class="comment"># Whether to enable strict mode. e.g. 0, 1</span></span><br><span class="line">  <span class="attr">reactions_enabled:</span> <span class="number">1</span> <span class="comment"># Whether to enable reactions. e.g. 0, 1</span></span><br><span class="line">  <span class="attr">emit_metadata:</span> <span class="number">0</span> <span class="comment"># Whether to emit metadata. e.g. 0, 1</span></span><br><span class="line">  <span class="attr">lang:</span> <span class="string">zh-CN</span> <span class="comment"># Giscus language. e.g. en, zh-CN, zh-TW</span></span><br><span class="line">  <span class="attr">input_position:</span> <span class="string">top</span> <span class="comment"># Place the comment box above/below the comments. e.g. top, bottom</span></span><br><span class="line">  <span class="attr">loading:</span> <span class="string">lazy</span> <span class="comment"># Load the comments lazily</span></span><br></pre></td></tr></table></figure></div>

<p>这些选项可以直接在giscus的官网生成配置：<a class="link"   href="https://giscus.app/zh-CN" >https://giscus.app/zh-CN <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>从这里开始：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830133010004.png"
                      alt="image-20240830133010004"
                ></p>
<p>我们可以看到，前提要求：</p>
<ul>
<li>仓库公开</li>
<li>安装了giscus app</li>
<li>仓库的discussions功能开启</li>
</ul>
<p>1，创建一个公开的仓库（我曾经用博客的仓库来做评论，但总是有问题，所以建议新建一个仓库。比如blog-comment）</p>
<p>2，安装giscus app：<a class="link"   href="https://github.com/apps/giscus" >https://github.com/apps/giscus <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> </p>
<p>如果不想给所有仓库都配置giscus，可以只给某个仓库设置：<a class="link"   href="https://github.com/settings/installations/54280830" >https://github.com/settings/installations/54280830 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>3，在仓库的settings中打开Discussions。（因为Giscus是使用GitHub Discussions来支持评论的）</p>
<p>接下来就可以继续填写了。我的github用户名是huyunfei-blog，仓库名是blog-comment，我应该填写：</p>
<blockquote>
<p>huyunfei-blog&#x2F;blog-comment</p>
</blockquote>
<p>接下来第二项，下面这一项的意思是评论的标题是什么，如果是title的话，当你评论一下，在discussions中就会显示，文章名 - 博客名（world - Yun Fei’s Blog）。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830133610678.png"
                      alt="image-20240830133610678"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830133617317.png"
                      alt="image-20240830133617317"
                ></p>
<p>这个可以根据自己的需求，我会把1,3,4勾选。 </p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830133832387.png"
                      alt="image-20240830133832387"
                ></p>
<p>上面都配置完成之后，下面的配置项自然就会刷新，然后放到你的主题配置文件里。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830133847212.png"
                      alt="image-20240830133847212"
                ></p>
<p>然后可以部署到github上之后，试一下：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830133936205.png"
                      alt="image-20240830133936205"
                ></p>
<h1 id="文章加密"><a href="#文章加密" class="headerlink" title="文章加密"></a>文章加密</h1><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 下载</span><br><span class="line">npm install --save hexo-blog-encrypt</span><br><span class="line"></span><br><span class="line">// 站点配置文件（_config.yml）中启用，这个是全局配置。文件也可以设置，文件的配置优先级大于配置文件。</span><br><span class="line">encrypt: # hexo-blog-encrypt</span><br><span class="line">  abstract: 请输入密码查看.</span><br><span class="line">  message: 您好, 这里需要密码.</span><br><span class="line">  wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试.</span><br><span class="line">  </span><br><span class="line">// 接下来就可以在文章的头部加上对应字段（如果password为空，则不加密）</span><br><span class="line">password: 123</span><br></pre></td></tr></table></figure></div>

<p>注意不要把md文件公开。不然就能看到password了。</p>
<p>你在本地设置好后，通过hexo上传到github，会自动把md文件编译为html，所以不会显示你的密码。</p>
<h1 id="typora和博客的图片显示问题"><a href="#typora和博客的图片显示问题" class="headerlink" title="typora和博客的图片显示问题"></a>typora和博客的图片显示问题</h1><p>通常来说，hexo的文件目录是下面这样：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830134418610.png"
                      alt="image-20240830134418610"
                ></p>
<p>public文件夹是每次hexo编译source文件夹下的内容，然后重新生成的，public文件夹我们不要动，通常只在source文件夹下修改。</p>
<p>source文件夹下，posts就是存的我们博客文章，是很多md文件。about，categories、tags是一些独立页面。比如我的博客的“关于”，就是about里控制的。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830134545573.png"
                      alt="image-20240830134545573"
                ></p>
<p>也就是说，当你在写博客文件的时候，你是基于_posts这个文件夹来写的。但是实际上的博客运行时，是基于public文件夹来访问的。这肯定会导致两方的图片路径不匹配。</p>
<p>首先需要修改typora的图像路径（你也可以用相对路径），我这里是为了其它原因，采用了绝对路径。</p>
<p>总归是插入图片之后，放到source文件夹下的images文件夹（images没有的话自己创建，其实也可以是任何的名字，但是纠结起来很麻烦，images是最方便的）。</p>
<p>最后的filename意思是以文件名称创建一个文件夹，这样每个博客文章都有一个文件夹，便于图片的分类识别。</p>
<p>这个时候，当你在_posts下写文章的时候，插入一张图片，图片路径显示的应该是：**..&#x2F;images&#x2F;(文章名字)&#x2F;(图片名字)**</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830134908033.png"
                      alt="image-20240830134908033"
                ></p>
<p>此时你部署博客，会发现图片无法正常显示，因为到了网络上就变成了：</p>
<p>https:&#x2F;&#x2F;……&#x2F;website&#x2F;..&#x2F;images&#x2F;(文章名字)&#x2F;(图片名字)</p>
<p>会发现站点后边，把那个“..”也拼接上去了，如果把“..”去掉，图片就可以正常显示了。</p>
<p>这个时候需要设置一下typora的根图片根目录为source文件夹：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830135456833.png"
                      alt="image-20240830135456833"
                ></p>
<p>这个时候你再插入图片，就从**..&#x2F;images&#x2F;(文章名字)&#x2F;(图片名字)<strong>变成了</strong>&#x2F;images&#x2F;(文章名字)&#x2F;(图片名字)**，图片也可以正常显示了。</p>
<p>然后你的文章的抬头，会多一个typora-root-url，这个意思就是图片的根目录修改。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830135659902.png"
                      alt="image-20240830135659902"
                ></p>
<h1 id="热加载配置文件"><a href="#热加载配置文件" class="headerlink" title="热加载配置文件"></a>热加载配置文件</h1><p>启动hexo之后，当你修改配置文件，浏览器不会自动刷新，更新相关内容。</p>
<p>可以通过下面这种方式，实现热加载。</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">//</span> <span class="string">安装插件实现热加载，然后正常启动即可</span></span><br><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">--save-dev</span> <span class="string">nodemon</span></span><br><span class="line"></span><br><span class="line"><span class="string">//</span> <span class="string">根目录创建nodemon.json配置文件</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;watch&quot;:</span> [<span class="string">&quot;_config.yml&quot;</span>, <span class="string">&quot;_config.*.yml&quot;</span>],</span><br><span class="line">  <span class="attr">&quot;exec&quot;:</span> <span class="string">&quot;hexo s&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;ext&quot;:</span> <span class="string">&quot;yml&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="string">//</span> <span class="string">启动Hexo服务器</span></span><br><span class="line"><span class="string">npx</span> <span class="string">nodemon</span></span><br></pre></td></tr></table></figure></div>

<h1 id="修改hexo默认生成的md文件格式"><a href="#修改hexo默认生成的md文件格式" class="headerlink" title="修改hexo默认生成的md文件格式"></a>修改hexo默认生成的md文件格式</h1><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new post “博客名称”</span><br></pre></td></tr></table></figure></div>

<p>上述命令可以生成一个博客，也就是在_posts文件夹下，生成一个md文件。默认会有一些抬头，比如文件名称和时间字段。</p>
<p>但是这个默认生成的md未必是我们想要的，比如我们需要多加一些字段，甚至是我们可以设置一个博客模版，需要在哪里修改？</p>
<p>修改下面的post.md文件即可。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830140028453.png"
                      alt="image-20240830140028453"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830140046115.png"
                      alt="image-20240830140046115"
                ></p>
<h1 id="SEO优化"><a href="#SEO优化" class="headerlink" title="SEO优化"></a>SEO优化</h1><p>优化的意思是可以提升你的博客的页面排名，得到更多的曝光。</p>
<p>通常来说，可以提交给百度和谷歌收录。但是由于我们的博客是部署在github上，而百度不收录pages的站点。（但其实对于个人独立站来说，百度的收录就跟没有一样，页面排名根本上不去。）</p>
<p>所以我们的SEO优化只有一条路，就是让google收录。</p>
<h2 id="文章永久链接"><a href="#文章永久链接" class="headerlink" title="文章永久链接"></a>文章永久链接</h2><p>这样你修改文章名称或者日期后，文章链接不会发生变化。有时候主题里会内置这个。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 安装插件</span><br><span class="line">npm install hexo-abbrline --save</span><br><span class="line"></span><br><span class="line">// 修改站点配置文件（_config.yml），需要注意，可能你的站点已经配置了permaline这个参数，如果重复了，站点部署会失败</span><br><span class="line">permalink: posts/:abbrlink/</span><br><span class="line">abbrlink:</span><br><span class="line">    alg: crc32   #算法： crc16(default) and crc32</span><br><span class="line">    rep: hex</span><br><span class="line">   </span><br></pre></td></tr></table></figure></div>

<h2 id="生成站点地图"><a href="#生成站点地图" class="headerlink" title="生成站点地图"></a>生成站点地图</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 安装插件</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">// 修改站点配置文件</span><br><span class="line">url: https://huyunfei-blog.github.io/website  // 修改为你的github站点</span><br><span class="line"># sitemap</span><br><span class="line">Plugins:</span><br><span class="line">  - hexo-generator-baidu-sitemap</span><br><span class="line">  - hexo-generator-sitemap</span><br><span class="line">baidusitemap:</span><br><span class="line">  path: baidusitemap.xml</span><br><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<p>hexo generate &amp;&amp; hexo server之后，可以直接访问<strong>localhost:4000&#x2F;sitemap.xml</strong>查看站点地图，就是你的各个html的路径。</p>
<h2 id="提交给google-search-console收录"><a href="#提交给google-search-console收录" class="headerlink" title="提交给google search console收录"></a>提交给google search console收录</h2><p>登录到<a class="link"   href="https://search.google.com/search-console" >google search console <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，然后我选择的html验证。</p>
<p>你需要把google要你下载的那个html放到source文件夹下，然后hexo s -d部署到github上。</p>
<p>此时通过你的站点应该是可以正常访问这个文件的：</p>
<p><a href="https://huyunfei-blog.github.io/website/google9f1d">https://huyunfei-blog.github.io/website/google9f1d</a>…</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/0880c4c807109dbfc923.png"
                      alt="img"
                ></p>
<p>然后回到google search，就可以点击验证了。 验证通过之后，这个文件可以删掉。</p>
<p>进来之后，可以看到你的站点的相关数据，但是新提交的，需要一天时间之后才能看到。</p>
<p>点击站点地图，这里把刚才的sitemap站点数据写在上面添加进去，这样当你新产出博客后，会自动添加到站点地图而被google感知到。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830141448666.png"
                      alt="image-20240830141448666"
                ></p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>博客搭建</tag>
        <tag>Hexo</tag>
        <tag>GitHub</tag>
        <tag>Redefine</tag>
        <tag>Giscus</tag>
      </tags>
  </entry>
</search>
