<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Carsh Course系列速成课: 如何学习技能？</title>
    <url>/website/2024/09/08/Carsh-Course-%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E6%8A%80%E8%83%BD%EF%BC%9F/</url>
    <content><![CDATA[<h1 id="记笔记"><a href="#记笔记" class="headerlink" title="记笔记"></a>记笔记</h1><h2 id="记笔记的工具如何选择？"><a href="#记笔记的工具如何选择？" class="headerlink" title="记笔记的工具如何选择？"></a>记笔记的工具如何选择？</h2><p>通常，我们会有两种方式来记笔记——纸张&#x2F;电脑。</p>
<p><strong>电脑记录的优缺点：</strong></p>
<p>优点：</p>
<ul>
<li>能记录更完整、更详细的内容。</li>
</ul>
<p>缺点：</p>
<ul>
<li>虽然看似能在电脑上记录更多的内容，但因为记录者会花费精力来思考如何组织句子，导致真正能被人记忆的很少。</li>
<li>电脑的记录更倾向于逐字逐句的记录。</li>
</ul>
<p><strong>纸张记录的优缺点：</strong></p>
<p>优点：</p>
<ul>
<li>由于纸张记录速度无法太快，导致人在学习过程中，必须要提炼出关键词记下来，这样就会把更多的精力放在内容的理解上，对记忆有所帮助。</li>
</ul>
<p>缺点：</p>
<ul>
<li>记录的速度慢。</li>
</ul>
<p>当我们知道纸张和电脑记录带来的优缺点之后，就可以取长补短了。 比如我们在使用电脑记录的时候，更多的把注意力放在理解内容上，去记录关键词，而不是靠着电脑记录的优势，把讲述者所有的内容都记录下来。</p>
<h2 id="记笔记的策略"><a href="#记笔记的策略" class="headerlink" title="记笔记的策略"></a>记笔记的策略</h2><ol>
<li>预习：在上课之前看看章节目录，看看课后题，带着问题去听课，会更有效果。</li>
</ol>
<blockquote>
<p>举个例子：比如你可以闭上眼，在脑子里想某个颜色，然后睁开眼，你会发现你会更加容易的注意到这个颜色。这就是预习的作用，能够让你更明白重点在哪里。</p>
</blockquote>
<ol start="2">
<li>使用康奈尔笔记法记录笔记：<ol>
<li><strong>记录：</strong> 康奈尔笔记法分为三栏，笔记栏，线索栏，总结栏。在学习的时候，你平时怎么记笔记，就在笔记栏记录下来，也可以采用大纲法，思维导图法记录，按你的习惯。</li>
<li><strong>精减：</strong>记录完右侧之后，在左侧标出关键词。之所以叫线索栏，就是要根据左侧的关键词的线索而还原出右侧的笔记。</li>
<li><strong>总结：</strong>在总结栏中总结下这一节的内容。</li>
<li><strong>复习：</strong>捂住右侧的笔记，通过线索栏的关键词来回忆笔记。</li>
</ol>
</li>
</ol>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Carsh-Course-%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E6%8A%80%E8%83%BD%EF%BC%9F/image-20240908162248401-17257849265921.png"
                      alt="image-20240908162248401"
                ></p>
<blockquote>
<p>我现在已经在使用康奈尔笔记法来记录笔记了，本身是使用阅读器来记录笔记的，阅读器中可以直接创卷康奈尔笔记法的模版，使用起来我觉得还蛮好的。</p>
</blockquote>
<h1 id="如何高效阅读？"><a href="#如何高效阅读？" class="headerlink" title="如何高效阅读？"></a>如何高效阅读？</h1><h2 id="关于速读"><a href="#关于速读" class="headerlink" title="关于速读"></a>关于速读</h2><p>受制于人的生理结构，不切实际的速读是不可能的，当读不需要每个字都理解的书时，可以进行略读。</p>
<p>当你对主要教材（每个字都需要理解）进行阅读时，还是要根据自己的理解程度去学习，而不是盲目的追求速度。</p>
<h2 id="如何划重点？"><a href="#如何划重点？" class="headerlink" title="如何划重点？"></a>如何划重点？</h2><p>很多人会在阅读的时候以自己的方式划重点，比较常见的是画横线。但是我们常常会画了很多很多的重点，这就让划重点本身失去了作用，当我们第二遍再看的时候，没有给我们起到删繁去简的作用。</p>
<p>为了解决第一遍看书的时候，会感觉每一句都是重点的问题，可以使用摩斯密码法来划重点：</p>
<ul>
<li>当遇到重要观点的时候，在左边画一个小点。</li>
<li>当遇到支撑前面观点的例子的时候，在空白处画一个横线。</li>
</ul>
<p>这样可以不打断你阅读的速度，而且也低代价的画了重点。等第二遍再阅读的时候，可以再根据情况来做笔记。</p>
<blockquote>
<p>我在实际的应用中，觉得小点用细笔有点难画，于是给自己换了一个标志，比如<strong>斜线</strong>。</p>
</blockquote>
<h2 id="真正理解文本的阅读方法"><a href="#真正理解文本的阅读方法" class="headerlink" title="真正理解文本的阅读方法"></a>真正理解文本的阅读方法</h2><p>可以通过SQ3R的方法来进行阅读：</p>
<ul>
<li>浏览：在真正的阅读之前，先浏览一下，看看开头概述，标题，章结尾的回顾问题。目的是对大脑进行热身。</li>
<li>提问：列出一些开始阅读之前你想到的问题。</li>
<li>阅读：正常阅读。</li>
<li>复述：复述、做笔记、总结阅读的内容。</li>
<li>复习：按照一定复习策略复习。</li>
</ul>
<h1 id="记忆"><a href="#记忆" class="headerlink" title="记忆"></a>记忆</h1><h2 id="记忆的分类"><a href="#记忆的分类" class="headerlink" title="记忆的分类"></a>记忆的分类</h2><ul>
<li>感受记忆：大部分是无意识的，会马上丢失。</li>
<li>工作记忆：会短时存储，同时只能处理4~7个信息块。这决定了我们阅读、记忆、同时处理任务的限制。</li>
<li>长时记忆：长时间存储。</li>
</ul>
<h2 id="记忆策略"><a href="#记忆策略" class="headerlink" title="记忆策略"></a>记忆策略</h2><ul>
<li>联想法：比如通过数字或一个故事来记住某个晦涩的概念，具体的使用方法可以在网上搜索。</li>
<li>反复巩固：你可以把大脑想象成一个图书馆，当记忆存储进去之后，书就放在了那里，是不会丢的。但是随着时间的迁移，书的位置可能会发生混乱，如果不重新对书进行整理，我们提取这些书的难度会增加，直到找不到。也就是说我们对记忆的提取强度会随着时间而衰减，衰减越多，回忆就越困难，学习效果也越好，但衰减的过多，就回忆不起来了。<ul>
<li><strong>五盒学习法：</strong>我们可以通过五盒学习法来对记忆进行反复巩固，具体来说，就是有五个盒子，他们的标识是：每天、每三天、每周、每三周、每月…假如说你学习了一个新概念，把它写在卡片上，然后放到第一个盒子里。第二天复习的时候，如果答对了，就放在下一个盒子里，以此类推。需要注意的是，不管在后边的哪个盒子里，一旦答错，就要重新放到第一个盒子里。</li>
</ul>
</li>
</ul>
<h1 id="计划与整理"><a href="#计划与整理" class="headerlink" title="计划与整理"></a>计划与整理</h1><ol>
<li>需要一个优秀的笔记系统，而一个优秀的笔记系统需要包含三个要素：<ol>
<li>任务管理器。 负责记录你所有的任务，可以使用四象限的方法来记录。</li>
<li>日历。</li>
<li>记笔记。</li>
</ol>
</li>
</ol>
<blockquote>
<p>可以了解一下GTD笔记系统，如果运转的好，可以极大提高工作效率，包含了上述的要素，从事情的到来到最后的结束能够比较好的闭环。</p>
</blockquote>
<ol start="2">
<li>做周计划<ol>
<li>抽出一天的时间来比较计划和实际的结果之间的区别，有差距就努力搞清楚原因。</li>
</ol>
</li>
</ol>
<h1 id="集中注意力"><a href="#集中注意力" class="headerlink" title="集中注意力"></a>集中注意力</h1><p>当你开启注意力，大脑就会启动抑制机制，屏蔽其它无关刺激（会产生疲劳）。</p>
<h2 id="如何提高注意力？"><a href="#如何提高注意力？" class="headerlink" title="如何提高注意力？"></a>如何提高注意力？</h2><ul>
<li>停止同时进行多个任务：<ul>
<li>大脑无法同时做两件事，可以把它想象成一个单核处理器，计算机在单核的时候，处理多任务的方式是“时间片轮转”，也就是快速的在多个任务上切换，由于切换的速度非常快，让你看起来就像是同时进行一样。那么当你同时在做两件事儿的时候，你的大脑也是这样的，它是不断的在A-B任务之间来回切换，而你的大脑并不擅长于此。</li>
<li>在任务之间的切换会带来认知转换惩罚，因为研究发现，当你从A任务切换到B任务之后，你会有一部分精力还在思考之前A任务的事情，这让你无法全神贯注在B任务上，导致对B任务的理解能力的下降。</li>
</ul>
</li>
<li>打造环境：<ul>
<li>可以给自己划分一片只进行学习的区域。</li>
<li>环境中不要有会让自己分心的东西或事情。</li>
<li>寻找自己喜欢的环境。（有的人喜欢在嘈杂的地方学习，有的人喜欢安静的地方学习）</li>
</ul>
</li>
<li>劳逸结合：<ul>
<li>最好学习一段时间，让自己休息一会儿。<ul>
<li>番茄钟学习法：拿一张白纸，当遇到分心的事情，记录到白纸上。然后学习25分钟，休息5分钟。四个番茄钟之后，休息15分钟。</li>
</ul>
</li>
</ul>
</li>
<li>睡眠、运动、饮食要保证好，这是注意力的上限。</li>
</ul>
<blockquote>
<p>番茄钟学习法，我知道它已经很多年了，曾经也试过，但总是提不起兴趣，没感觉它对我的注意力提供了帮助。直到这次，我又拾起来了，才算真正理解了番茄钟的妙用：</p>
<ul>
<li>首先，我需要低打扰的番茄钟方法，假如25分钟的时候，以很大的声音吵到我，直接让我中断了本来进入的心流状态，这会让我很难受。我找到了两个方法：<ul>
<li>第一是买一个沙漏，沙子流完了之后你也不用管它，你也不需要关注，当你感觉有点累的时候，如果沙漏流完了，休息一会儿。但由于沙漏对时间的自定义不太方便，以及携带有点麻烦，没采取这种方案。</li>
<li>第二是找到一款软件（我现在在用滴答清单），可以自定义时间，然后可以设置到时间之后是否静音，我现在采用的是震动法，当时间到了之后，震动三秒，这让我知道我这个番茄钟的时间到了，如果我感觉我有点烦躁，不想学习了，就歇五分钟，如果我感觉此时正在心流中，就不管它（<strong>番茄钟最大的作用，不是让你知道或追求完成了几个番茄钟，而是给你一个进入心流的理由，当你进入心流之后，就不用管它了。</strong>）。</li>
</ul>
</li>
<li>另外，番茄钟的时间你可以根据自己的状态来设置，我是觉得25分钟有点太短了，通常，我会选择是30分钟，对我来说这个时间刚刚好。</li>
<li>最后，在设置番茄钟的时候，需要给自己设立明确的任务或目标（如果是大任务，要拆解成小任务——那种你认为一个番茄钟能完成的任务），目的是当开启番茄钟的时候，你的眼里什么都没有了，只有眼前的这个目标和猎物，然后告诉自己，竭尽全力的去完成它。（<strong>这个信念感非常重要，可以说是番茄钟心流的精髓所在</strong>）</li>
<li>由于人类生理的限制，分心，分神都是在所难免的，以及在工作中可能会有各种事情来打断你。所以可以准备一张纸，把突如其来的事情记录下来，这样不让你忘记，也会让你的大脑认为事情已经记录下来了，就不需要再记忆，再转而处理刚才的任务。</li>
<li>如果你需要的话，也可以根据完成番茄钟的数量来兑换奖励（比如一次番茄钟十块钱），提高任务的价值属性，可能会让你更容易进入做任务的状态。</li>
</ul>
</blockquote>
<p>很多时候，我们会认为注意力是一天中的有限可消耗资源，但现在越来越多的研究表明，注意可能不是一天中消耗的有限资源。对此我们不进行讨论，但重要的是，注意力需要劳逸结合。</p>
<h1 id="拖延症的解决"><a href="#拖延症的解决" class="headerlink" title="拖延症的解决"></a>拖延症的解决</h1><p>可以通过<strong>拖延动机方程</strong>来解释人为什么会拖延。</p>
<p>动机 &#x3D; （期望 * 价值） &#x2F; （冲动 * 延迟）</p>
<p>期望：人相信自己能完成任务的信念强度。</p>
<p>价值：完成任务获得的奖励，以及做的这个事情是否快乐，是否有意义。</p>
<p>冲动：做事情时分心的冲动程度。</p>
<p>延迟：完成任务获得奖励的时间，时间越长，值越大。也就是短期奖励＞长期奖励。</p>
<p>我们需要提高分子（期望&#x2F;价值），需要降低分母（冲动&#x2F;延迟），才能让我们更有动力的去做一件事。</p>
<ol>
<li><p><strong>提高期望：</strong></p>
<ol>
<li>任务不能太难，否则会觉得自己无法完成这个任务而退缩。如果你觉得自己的任务很难，就把任务分解为更小的任务，这可以分散注意力。比如：学论文 -&gt; 查资料， 做草稿 -&gt;  写引言、论证、结论。</li>
<li>寻求帮助。当你觉得当前的问题很困难，通过学习小组进行讨论，或者寻求牛人帮助，也是一个不错的方法。</li>
</ol>
</li>
<li><p><strong>提高价值：</strong></p>
<ol>
<li>提高做完事情的奖励。</li>
<li>提高工作时的体验。（在喜欢的环境中学习，或者工具的使用要舒适）</li>
<li>给子任务增加额外的小奖励。（游戏化）</li>
</ol>
</li>
<li><p><strong>降低冲动：</strong></p>
<ol>
<li>选一个好环境，不接触到分心干扰的事情。</li>
</ol>
</li>
<li><p><strong>降低奖励延迟：</strong></p>
<ol>
<li>人会天然的关注短期奖励，而不去关注长期奖励。这需要我们自己对奖励进行设计。</li>
</ol>
</li>
</ol>
<p>另外还有一个技巧，当我们有很多任务的时候，通常我们会推迟有挑战的那个任务，然后做一堆容易的事情，这会让我们很容易觉得自己今天做了很多的事情，而不去做那个最难的事情。</p>
<p>所以，下一次，请从最难的任务开始做。</p>
<h1 id="备考"><a href="#备考" class="headerlink" title="备考"></a>备考</h1><ol>
<li>在与考试相近的场景中学习，更有利于在考试中回忆。在考试之前，至少要按照考场的规则模拟一次，这样会让你更加适应考场的环境。</li>
<li>当遇到问题的时候，先拿15分钟的时间来进行思考，一行一行地研究问题，直到确切直到困惑在哪之后再进行求助。</li>
<li>可以进行做小抄练习，因为小抄非常的小，能记录的信息很有限，这会逼迫你把最重要的提炼下来。</li>
</ol>
<h1 id="考试焦虑"><a href="#考试焦虑" class="headerlink" title="考试焦虑"></a>考试焦虑</h1><p>过度焦虑会影响记忆。</p>
<h2 id="焦虑的三大原因"><a href="#焦虑的三大原因" class="headerlink" title="焦虑的三大原因"></a>焦虑的三大原因</h2><p>焦虑主要来自于对三个方面的恐惧：</p>
<ol>
<li>重复过往失败。</li>
<li>未知。</li>
<li>风险。</li>
</ol>
<p>解决方案：</p>
<ol>
<li>对于过去的失败，要分析原因，解决并克服。这样就不会对过去的失败而恐惧。</li>
<li>在考试之前可以更多的了解相关的信息，做好充足的准备，来消除这种未知。</li>
<li>把考试当做一次学习机会，不要太过强调这场考试的重要性。</li>
</ol>
<p>当你感到焦虑时，可以花几分钟写在纸上（写下你真正的恐惧和焦虑），这会让你的大脑认为你的焦虑以及转移出去了。</p>
<h1 id="文章与写作"><a href="#文章与写作" class="headerlink" title="文章与写作"></a>文章与写作</h1><ol>
<li>查资料之前先进行预写作：<ol>
<li>给自己25分钟的时间，把所有大脑中和该话题相关的一切都写下来。（这可能会让你想到未知的角度，如果你查完资料之后再写作，思维会被资料所局限）</li>
</ol>
</li>
<li>查资料（不要一直纠结在这个阶段出不来）：<ol>
<li>相关网站，wiki百科，以及科普书籍的引用词条。</li>
<li>对资料中与论点有关的材料高亮。</li>
</ol>
</li>
<li>写初稿：<ol>
<li>放飞自我的写，不要追求完美。</li>
</ol>
</li>
<li>编辑初稿：<ol>
<li>论证是否支持论点</li>
<li>文章读起来是否通顺（可以给别人读一下，能发现更多问题）</li>
<li>论证能否展开</li>
<li>句法能否更加简洁</li>
</ol>
</li>
</ol>
<h1 id="关于低密度娱乐与高密度娱乐"><a href="#关于低密度娱乐与高密度娱乐" class="headerlink" title="关于低密度娱乐与高密度娱乐"></a>关于低密度娱乐与高密度娱乐</h1><p>很多人会抗拒高密度的娱乐（玩两个小时的大型游戏），觉得那会浪费很多的时间，不如把时间用在学习上。</p>
<p>但研究表明，这些拒绝高密度娱乐的人，反而会把更多的时间放在刷微博，逛淘宝，刷朋友圈这种事情上。因为低密度娱乐更容易说服自己，每一次只玩五分钟，累计下来却反而是很多的时间。</p>
<p>更重要的是，这些低密度的娱乐，不会给我们带来什么真正有用的内容。</p>
<p>还不如一天好好学习，晚上玩上两个小时游戏，去真正的享受其中。</p>
]]></content>
      <categories>
        <category>Carsh Couse速成课</category>
      </categories>
      <tags>
        <tag>Carsh Course速成课</tag>
        <tag>学习</tag>
        <tag>记忆</tag>
        <tag>记笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo+GitHub Pages+Redefine+Giscus建立个人站点</title>
    <url>/website/2024/08/30/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/</url>
    <content><![CDATA[<h1 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h1><p>搭建整个博客不需要任何额外的东西，比如域名，比如服务器之类的。但是需要你能访问到github。</p>
<p>熟练起来，搭建大约两个小时，初次搭建大约需要一天。</p>
<p>Hexo：一个博客框架，可以认为是一个帮助你快速建立博客的工具集。可以通过命令行的形式创建页面，启动服务，上传到github之类的。当然，除了Hexo，也有其它的博客框架。</p>
<p>Redefine：Hexo博客框架下的一个主题，Hexo可以管理多个主题。</p>
<p>GitHub Pages：github的静态网页部署方式，可以让你的html在网页上直接打开。</p>
<p>Giscus：博客需要评论，评论就需要评论系统，Giscus就是一个评论系统。 除此之外也有其它的评论系统，它们大概都是根据存储评论地方的不同而区分，比如有的是存在github的issue，有的是存在第三方存储平台，按需索取。</p>
<p>大概的流程是：</p>
<ol>
<li>你需要在Hexo的主题列表中选一个自己心仪的主题，然后在本地部署起来。（可以直接在本地访问网页）</li>
<li>然后在github创建一个仓库，打开pages</li>
<li>通过hexo将本地的博客系统部署到github仓库</li>
<li>配置Giscus评论系统</li>
</ol>
<h1 id="搭建博客-部署pages"><a href="#搭建博客-部署pages" class="headerlink" title="搭建博客 &amp; 部署pages"></a>搭建博客 &amp; 部署pages</h1><p><a class="link"   href="https://www.cnblogs.com/huanhao/p/hexobase.html" >【基础篇】hexo博客搭建教程 - huanhao - 博客园 (cnblogs.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>搭建博客可以参考上述这个链接，写的蛮详细的。</p>
<h1 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h1><p>我这个主题的评论系统支持四种：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830132235627.png"
                      alt="image-20240830132235627"
                ></p>
<p>我分别试了waline、gitalk、giscus三种，只有giscus可用。</p>
<p>waline在国内被墙，需要一个自定义域名，国内的域名需要备案，国外的申请也比较麻烦，过程很繁琐。</p>
<p>gitalk在国内没有被墙，但是它需要调一个github的auth api，这个api被墙了，所以也不能用。</p>
<p>只有giscus可以用。</p>
<p>如果你的主题支持giscus的话，打开配置文件，大概会有这些选项需要配置</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">giscus:</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">huyunfei-blog/blog-comment</span> <span class="comment"># Github repository name e.g. EvanNotFound/hexo-theme-redefine</span></span><br><span class="line">  <span class="attr">repo_id:</span>  <span class="comment"># Github repository id</span></span><br><span class="line">  <span class="attr">category:</span>  <span class="comment"># Github discussion category</span></span><br><span class="line">  <span class="attr">category_id:</span>  <span class="comment"># Github discussion category id</span></span><br><span class="line">  <span class="attr">mapping:</span>  <span class="comment"># Which value to use as the unique identifier for the page. e.g. pathname, url, title, og:title. DO NOT USE og:title WITH PJAX ENABLED since pjax will not update og:title when the page changes</span></span><br><span class="line">  <span class="attr">strict:</span> <span class="number">0</span> <span class="comment"># Whether to enable strict mode. e.g. 0, 1</span></span><br><span class="line">  <span class="attr">reactions_enabled:</span> <span class="number">1</span> <span class="comment"># Whether to enable reactions. e.g. 0, 1</span></span><br><span class="line">  <span class="attr">emit_metadata:</span> <span class="number">0</span> <span class="comment"># Whether to emit metadata. e.g. 0, 1</span></span><br><span class="line">  <span class="attr">lang:</span> <span class="string">zh-CN</span> <span class="comment"># Giscus language. e.g. en, zh-CN, zh-TW</span></span><br><span class="line">  <span class="attr">input_position:</span> <span class="string">top</span> <span class="comment"># Place the comment box above/below the comments. e.g. top, bottom</span></span><br><span class="line">  <span class="attr">loading:</span> <span class="string">lazy</span> <span class="comment"># Load the comments lazily</span></span><br></pre></td></tr></table></figure></div>

<p>这些选项可以直接在giscus的官网生成配置：<a class="link"   href="https://giscus.app/zh-CN" >https://giscus.app/zh-CN <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>从这里开始：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830133010004.png"
                      alt="image-20240830133010004"
                ></p>
<p>我们可以看到，前提要求：</p>
<ul>
<li>仓库公开</li>
<li>安装了giscus app</li>
<li>仓库的discussions功能开启</li>
</ul>
<p>1，创建一个公开的仓库（我曾经用博客的仓库来做评论，但总是有问题，所以建议新建一个仓库。比如blog-comment）</p>
<p>2，安装giscus app：<a class="link"   href="https://github.com/apps/giscus" >https://github.com/apps/giscus <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> </p>
<p>如果不想给所有仓库都配置giscus，可以只给某个仓库设置：<a class="link"   href="https://github.com/settings/installations/54280830" >https://github.com/settings/installations/54280830 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>3，在仓库的settings中打开Discussions。（因为Giscus是使用GitHub Discussions来支持评论的）</p>
<p>接下来就可以继续填写了。我的github用户名是huyunfei-blog，仓库名是blog-comment，我应该填写：</p>
<blockquote>
<p>huyunfei-blog&#x2F;blog-comment</p>
</blockquote>
<p>接下来第二项，下面这一项的意思是评论的标题是什么，如果是title的话，当你评论一下，在discussions中就会显示，文章名 - 博客名（world - Yun Fei’s Blog）。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830133610678.png"
                      alt="image-20240830133610678"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830133617317.png"
                      alt="image-20240830133617317"
                ></p>
<p>这个可以根据自己的需求，我会把1,3,4勾选。 </p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830133832387.png"
                      alt="image-20240830133832387"
                ></p>
<p>上面都配置完成之后，下面的配置项自然就会刷新，然后放到你的主题配置文件里。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830133847212.png"
                      alt="image-20240830133847212"
                ></p>
<p>然后可以部署到github上之后，试一下：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830133936205.png"
                      alt="image-20240830133936205"
                ></p>
<h1 id="文章加密"><a href="#文章加密" class="headerlink" title="文章加密"></a>文章加密</h1><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 下载</span><br><span class="line">npm install --save hexo-blog-encrypt</span><br><span class="line"></span><br><span class="line">// 站点配置文件（_config.yml）中启用，这个是全局配置。文件也可以设置，文件的配置优先级大于配置文件。</span><br><span class="line">encrypt: # hexo-blog-encrypt</span><br><span class="line">  abstract: 请输入密码查看.</span><br><span class="line">  message: 您好, 这里需要密码.</span><br><span class="line">  wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试.</span><br><span class="line">  </span><br><span class="line">// 接下来就可以在文章的头部加上对应字段（如果password为空，则不加密）</span><br><span class="line">password: 123</span><br></pre></td></tr></table></figure></div>

<p>注意不要把md文件公开。不然就能看到password了。</p>
<p>你在本地设置好后，通过hexo上传到github，会自动把md文件编译为html，所以不会显示你的密码。</p>
<h1 id="typora和博客的图片显示问题"><a href="#typora和博客的图片显示问题" class="headerlink" title="typora和博客的图片显示问题"></a>typora和博客的图片显示问题</h1><p>通常来说，hexo的文件目录是下面这样：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830134418610.png"
                      alt="image-20240830134418610"
                ></p>
<p>public文件夹是每次hexo编译source文件夹下的内容，然后重新生成的，public文件夹我们不要动，通常只在source文件夹下修改。</p>
<p>source文件夹下，posts就是存的我们博客文章，是很多md文件。about，categories、tags是一些独立页面。比如我的博客的“关于”，就是about里控制的。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830134545573.png"
                      alt="image-20240830134545573"
                ></p>
<p>也就是说，当你在写博客文件的时候，你是基于_posts这个文件夹来写的。但是实际上的博客运行时，是基于public文件夹来访问的。这肯定会导致两方的图片路径不匹配。</p>
<p>首先需要修改typora的图像路径（你也可以用相对路径），我这里是为了其它原因，采用了绝对路径。</p>
<p>总归是插入图片之后，放到source文件夹下的images文件夹（images没有的话自己创建，其实也可以是任何的名字，但是纠结起来很麻烦，images是最方便的）。</p>
<p>最后的filename意思是以文件名称创建一个文件夹，这样每个博客文章都有一个文件夹，便于图片的分类识别。</p>
<p>这个时候，当你在_posts下写文章的时候，插入一张图片，图片路径显示的应该是：**..&#x2F;images&#x2F;(文章名字)&#x2F;(图片名字)**</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830134908033.png"
                      alt="image-20240830134908033"
                ></p>
<p>此时你部署博客，会发现图片无法正常显示，因为到了网络上就变成了：</p>
<p>https:&#x2F;&#x2F;……&#x2F;website&#x2F;..&#x2F;images&#x2F;(文章名字)&#x2F;(图片名字)</p>
<p>会发现站点后边，把那个“..”也拼接上去了，如果把“..”去掉，图片就可以正常显示了。</p>
<p>这个时候需要设置一下typora的根图片根目录为source文件夹：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830135456833.png"
                      alt="image-20240830135456833"
                ></p>
<p>这个时候你再插入图片，就从**..&#x2F;images&#x2F;(文章名字)&#x2F;(图片名字)<strong>变成了</strong>&#x2F;images&#x2F;(文章名字)&#x2F;(图片名字)**，图片也可以正常显示了。</p>
<p>然后你的文章的抬头，会多一个typora-root-url，这个意思就是图片的根目录修改。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830135659902.png"
                      alt="image-20240830135659902"
                ></p>
<h1 id="热加载配置文件"><a href="#热加载配置文件" class="headerlink" title="热加载配置文件"></a>热加载配置文件</h1><p>启动hexo之后，当你修改配置文件，浏览器不会自动刷新，更新相关内容。</p>
<p>可以通过下面这种方式，实现热加载。</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">//</span> <span class="string">安装插件实现热加载，然后正常启动即可</span></span><br><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">--save-dev</span> <span class="string">nodemon</span></span><br><span class="line"></span><br><span class="line"><span class="string">//</span> <span class="string">根目录创建nodemon.json配置文件</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;watch&quot;:</span> [<span class="string">&quot;_config.yml&quot;</span>, <span class="string">&quot;_config.*.yml&quot;</span>],</span><br><span class="line">  <span class="attr">&quot;exec&quot;:</span> <span class="string">&quot;hexo s&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;ext&quot;:</span> <span class="string">&quot;yml&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="string">//</span> <span class="string">启动Hexo服务器</span></span><br><span class="line"><span class="string">npx</span> <span class="string">nodemon</span></span><br></pre></td></tr></table></figure></div>

<h1 id="修改hexo默认生成的md文件格式"><a href="#修改hexo默认生成的md文件格式" class="headerlink" title="修改hexo默认生成的md文件格式"></a>修改hexo默认生成的md文件格式</h1><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new post “博客名称”</span><br></pre></td></tr></table></figure></div>

<p>上述命令可以生成一个博客，也就是在_posts文件夹下，生成一个md文件。默认会有一些抬头，比如文件名称和时间字段。</p>
<p>但是这个默认生成的md未必是我们想要的，比如我们需要多加一些字段，甚至是我们可以设置一个博客模版，需要在哪里修改？</p>
<p>修改下面的post.md文件即可。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830140028453.png"
                      alt="image-20240830140028453"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830140046115.png"
                      alt="image-20240830140046115"
                ></p>
<h1 id="SEO优化"><a href="#SEO优化" class="headerlink" title="SEO优化"></a>SEO优化</h1><p>优化的意思是可以提升你的博客的页面排名，得到更多的曝光。</p>
<p>通常来说，可以提交给百度和谷歌收录。但是由于我们的博客是部署在github上，而百度不收录pages的站点。（但其实对于个人独立站来说，百度的收录就跟没有一样，页面排名根本上不去。）</p>
<p>所以我们的SEO优化只有一条路，就是让google收录。</p>
<h2 id="文章永久链接"><a href="#文章永久链接" class="headerlink" title="文章永久链接"></a>文章永久链接</h2><p>这样你修改文章名称或者日期后，文章链接不会发生变化。有时候主题里会内置这个。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 安装插件</span><br><span class="line">npm install hexo-abbrline --save</span><br><span class="line"></span><br><span class="line">// 修改站点配置文件（_config.yml），需要注意，可能你的站点已经配置了permaline这个参数，如果重复了，站点部署会失败</span><br><span class="line">permalink: posts/:abbrlink/</span><br><span class="line">abbrlink:</span><br><span class="line">    alg: crc32   #算法： crc16(default) and crc32</span><br><span class="line">    rep: hex</span><br><span class="line">   </span><br></pre></td></tr></table></figure></div>

<h2 id="生成站点地图"><a href="#生成站点地图" class="headerlink" title="生成站点地图"></a>生成站点地图</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 安装插件</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">// 修改站点配置文件</span><br><span class="line">url: https://huyunfei-blog.github.io/website  // 修改为你的github站点</span><br><span class="line"># sitemap</span><br><span class="line">Plugins:</span><br><span class="line">  - hexo-generator-baidu-sitemap</span><br><span class="line">  - hexo-generator-sitemap</span><br><span class="line">baidusitemap:</span><br><span class="line">  path: baidusitemap.xml</span><br><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<p>hexo generate &amp;&amp; hexo server之后，可以直接访问<strong>localhost:4000&#x2F;sitemap.xml</strong>查看站点地图，就是你的各个html的路径。</p>
<h2 id="提交给google-search-console收录"><a href="#提交给google-search-console收录" class="headerlink" title="提交给google search console收录"></a>提交给google search console收录</h2><p>登录到<a class="link"   href="https://search.google.com/search-console" >google search console <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，然后我选择的html验证。</p>
<p>你需要把google要你下载的那个html放到source文件夹下，然后hexo s -d部署到github上。</p>
<p>此时通过你的站点应该是可以正常访问这个文件的：</p>
<p><a href="https://huyunfei-blog.github.io/website/google9f1d">https://huyunfei-blog.github.io/website/google9f1d</a>…</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/0880c4c807109dbfc923.png"
                      alt="img"
                ></p>
<p>然后回到google search，就可以点击验证了。 验证通过之后，这个文件可以删掉。</p>
<p>进来之后，可以看到你的站点的相关数据，但是新提交的，需要一天时间之后才能看到。</p>
<p>点击站点地图，这里把刚才的sitemap站点数据写在上面添加进去，这样当你新产出博客后，会自动添加到站点地图而被google感知到。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/website/images/Hexo-Pages-Redefine-Giscus%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/image-20240830141448666.png"
                      alt="image-20240830141448666"
                ></p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>博客搭建</tag>
        <tag>Hexo</tag>
        <tag>GitHub</tag>
        <tag>Redefine</tag>
        <tag>Giscus</tag>
      </tags>
  </entry>
  <entry>
    <title>卡片抽认箱</title>
    <url>/website/2024/09/04/%E5%8D%A1%E7%89%87%E6%8A%BD%E8%AE%A4%E7%AE%B1/</url>
    <content><![CDATA[
<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="3feb949a9a40bdab98850be38d85793aa89e2e51b984cd343cd7a36fe6f341c7">d2696d73370a80df567cb89eba52180387842c53ccf4cb8b6fabf3c924b60172b5f04830de3b64f788c1e9f5ffa6c421d629b504ee850c43d7a576e562d8b354825fbf3f67380b34cc12de9cf8cb9bdeaf8b90e2c1af786c304bfb534709423a7bd894c205b9f04f2ee35d32ae93f3ed88283f2d78ebb076868ba3191c2531c60198f59204f344b2543698b6a34cedf342dd3309789f9469cc727627c75146645ae516bdcdad0b88f9dbde1b45ca67cf5b6a5f0213a818bf166a61513c3244df41b8117917c18e14efc609a25a96e0da4b1742c4898b048a1f9504e36ca45984252f1493c4fcbe6f4250351cfe5a05b098f6b79878207f861aa2cba17ab9de741a9485d24e1bdc4fde0f056a8bbc5e9e432b7a919b6c6e0cd7993e45b10391085be9348a0bd81f8cf6731fceb7e079b2cb01849cf2b787c5512ed95fd4fbece0a1a99515dd41ff825bb23bd108bb5ca3bf7a2773410e13925048e7f5933f971aee9e22c82c3d33fb7c310fa332cbf7d5f7b1ccb07bd0cddfee6b22a5c625ad374b84ff91d2041d452404bdee0193fb19508f38c95a214d44b822041b59c9821e973b31ab687d026d834aae040eae784f93212bb144deb5a9c1badffc1d8ee4b314351ecc4082f42e4e95f608ae66c70b0c258e1ba2ce8fa32f41ebde82e1e0f9d9dde9b40cd2d334a09ac2c953736698a8cbba4fb4faa5d22b4214b843f38b81c52b7acc4023bb9f4e66c001632b0666cc647c53ab7a025da86da32f9c7e1c1deebd08f339328e65a0245beba948cde76320dd515faada4868188398542af45108c934fd46ccaa6c318937859455d20c452c60263d813c8563bf3bf5fbebdded076937dc6fd2c242b5af117d0b6c87a3f44f79c42e3a9bca15f1c79b17efa12b0eab09173b8c3d540f01ed4145e7261a9038fc4babb4409ce55bafa033ade4c4990b5ade7becd05f28872ee57b25862d03a0eab7fbfae8653d8fcdd68764b759f01b4ae2bd6a6af2773baef6e0f76545f5d0c44fe5d090379732568fd8b9589496695ad219a0eec3c5eacdd5bac24507</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>
      </label>
    </div>
  </div>
</div>
<script data-swup-reload-script src="/website/lib/hbe.js"></script><link href="/website/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>卡片抽认箱0</category>
      </categories>
      <tags>
        <tag>记忆</tag>
        <tag>卡片抽认</tag>
      </tags>
  </entry>
</search>
